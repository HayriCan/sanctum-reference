openapi: 3.0.3
info:
  title: Scoutium
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://local.scoutium.com'
paths:
  /api/auth/register:
    post:
      summary: 'Register Endpoint.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        201:
          description: '201'
          content:
            application/json:
              schema:
                type: object
                example:
                  error: false
                  message: 'User Created'
                  data:
                    token: 19|gyNm065OjWn48CCkSGQpM4KGmR9NLaSRWr9uXUlC
                    user:
                      name: 'John Doe'
                      email: johndoe@example.com
                      created_at: '2021-07-17 15:49:05'
                    wallet:
                      amount: 0
                      currency: TRY
                properties:
                  error:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'User Created'
                  data:
                    type: object
                    example:
                      token: 19|gyNm065OjWn48CCkSGQpM4KGmR9NLaSRWr9uXUlC
                      user:
                        name: 'John Doe'
                        email: johndoe@example.com
                        created_at: '2021-07-17 15:49:05'
                      wallet:
                        amount: 0
                        currency: TRY
        400:
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  error: true
                  message: 'Reference number not found'
                  data: null
                properties:
                  error:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Reference number not found'
                  data:
                    type: string
                    example: null
        422:
          description: '422'
          content:
            application/json:
              schema:
                type: object
                example:
                  error: true
                  message: 'StoreUserRequest validation failed'
                  data:
                    email:
                      - 'The email has already been taken.'
                properties:
                  error:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'StoreUserRequest validation failed'
                  data:
                    type: object
                    example:
                      email:
                        - 'The email has already been taken.'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the  user.'
                  example: 'John Doe'
                email:
                  type: string
                  description: 'The email of the  user.'
                  example: johndoe@example.com
                password:
                  type: string
                  description: 'The password of the  user.'
                  example: secret
                ref_code:
                  type: string
                  description: 'nullable    The reference code of the  user.'
                  example: S60F2EC85AFAEF
                password_confirmation:
                  type: string
                  description: 'The password_confirmation of the  user.'
                  example: secret
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/auth/login:
    post:
      summary: 'Login Endpoint.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  error: false
                  message: 'User logged in'
                  data:
                    token: 17|v2G5z7HrbrY1aLmvZnOxBO7pUl1K9KnTUvBpb79f
                properties:
                  error:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'User logged in'
                  data:
                    type: object
                    example:
                      token: 17|v2G5z7HrbrY1aLmvZnOxBO7pUl1K9KnTUvBpb79f
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'The email of the  user.'
                  example: johndoe@example.com
                password:
                  type: string
                  description: 'The password of the  user.'
                  example: secret
              required:
                - email
                - password
      security: []
  /api/send-invitation:
    post:
      summary: 'Handle the incoming request.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: beaulah23@example.org
              required:
                - email
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: ''
security:
  -
    default: []
